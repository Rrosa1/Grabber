package cl.tesis.tls.constant;

import java.util.Arrays;

public enum CipherSuites {

    TLS_NULL_WITH_NULL_NULL("TLS_NULL_WITH_NULL_NULL", "0000", new byte[]{(byte) 0x00, (byte) 0x00}),
    TLS_RSA_WITH_NULL_MD5("TLS_RSA_WITH_NULL_MD5", "0001", new byte[]{(byte) 0x00, (byte) 0x01}),
    TLS_RSA_WITH_NULL_SHA("TLS_RSA_WITH_NULL_SHA", "0002", new byte[]{(byte) 0x00, (byte) 0x02}),
    TLS_RSA_EXPORT_WITH_RC4_40_MD5("TLS_RSA_EXPORT_WITH_RC4_40_MD5", "0003", new byte[]{(byte) 0x00, (byte) 0x03}),
    TLS_RSA_WITH_RC4_128_MD5("TLS_RSA_WITH_RC4_128_MD5", "0004", new byte[]{(byte) 0x00, (byte) 0x04}),
    TLS_RSA_WITH_RC4_128_SHA("TLS_RSA_WITH_RC4_128_SHA", "0005", new byte[]{(byte) 0x00, (byte) 0x05}),
    TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5("TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5", "0006", new byte[]{(byte) 0x00, (byte) 0x06}),
    TLS_RSA_WITH_IDEA_CBC_SHA("TLS_RSA_WITH_IDEA_CBC_SHA", "0007", new byte[]{(byte) 0x00, (byte) 0x07}),
    TLS_RSA_EXPORT_WITH_DES40_CBC_SHA("TLS_RSA_EXPORT_WITH_DES40_CBC_SHA", "0008", new byte[]{(byte) 0x00, (byte) 0x08}),
    TLS_RSA_WITH_DES_CBC_SHA("TLS_RSA_WITH_DES_CBC_SHA", "0009", new byte[]{(byte) 0x00, (byte) 0x09}),
    TLS_RSA_WITH_3DES_EDE_CBC_SHA("TLS_RSA_WITH_3DES_EDE_CBC_SHA", "000A", new byte[]{(byte) 0x00, (byte) 0x0A}),
    TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA("TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA", "000B", new byte[]{(byte) 0x00, (byte) 0x0B}),
    TLS_DH_DSS_WITH_DES_CBC_SHA("TLS_DH_DSS_WITH_DES_CBC_SHA", "000C", new byte[]{(byte) 0x00, (byte) 0x0C}),
    TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA("TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA", "000D", new byte[]{(byte) 0x00, (byte) 0x0D}),
    TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA("TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA", "000E", new byte[]{(byte) 0x00, (byte) 0x0E}),
    TLS_DH_RSA_WITH_DES_CBC_SHA("TLS_DH_RSA_WITH_DES_CBC_SHA", "000F", new byte[]{(byte) 0x00, (byte) 0x0F}),
    TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA("TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA", "0010", new byte[]{(byte) 0x00, (byte) 0x10}),
    TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA("TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", "0011", new byte[]{(byte) 0x00, (byte) 0x11}),
    TLS_DHE_DSS_WITH_DES_CBC_SHA("TLS_DHE_DSS_WITH_DES_CBC_SHA", "0012", new byte[]{(byte) 0x00, (byte) 0x12}),
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA("TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", "0013", new byte[]{(byte) 0x00, (byte) 0x13}),
    TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA("TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", "0014", new byte[]{(byte) 0x00, (byte) 0x14}),
    TLS_DHE_RSA_WITH_DES_CBC_SHA("TLS_DHE_RSA_WITH_DES_CBC_SHA", "0015", new byte[]{(byte) 0x00, (byte) 0x15}),
    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA("TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA", "0016", new byte[]{(byte) 0x00, (byte) 0x16}),
    TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5("TLS_DH_ANON_EXPORT_WITH_RC4_40_MD5", "0017", new byte[]{(byte) 0x00, (byte) 0x17}),
    TLS_DH_ANON_WITH_RC4_128_MD5("TLS_DH_ANON_WITH_RC4_128_MD5", "0018", new byte[]{(byte) 0x00, (byte) 0x18}),
    TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA("TLS_DH_ANON_EXPORT_WITH_DES40_CBC_SHA", "0019", new byte[]{(byte) 0x00, (byte) 0x19}),
    TLS_DH_ANON_WITH_DES_CBC_SHA("TLS_DH_ANON_WITH_DES_CBC_SHA", "001A", new byte[]{(byte) 0x00, (byte) 0x1A}),
    TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA("TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA", "001B", new byte[]{(byte) 0x00, (byte) 0x1B}),
    SSL_FORTEZZA_KEA_WITH_NULL_SHA("SSL_FORTEZZA_KEA_WITH_NULL_SHA", "001C", new byte[]{(byte) 0x00, (byte) 0x1C}),
    SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA("SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA", "001D", new byte[]{(byte) 0x00, (byte) 0x1D}),
    TLS_KRB5_WITH_DES_CBC_SHA("TLS_KRB5_WITH_DES_CBC_SHA", "001E", new byte[]{(byte) 0x00, (byte) 0x1E}),
    TLS_KRB5_WITH_3DES_EDE_CBC_SHA("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", "001F", new byte[]{(byte) 0x00, (byte) 0x1F}),
    TLS_KRB5_WITH_RC4_128_SHA("TLS_KRB5_WITH_RC4_128_SHA", "0020", new byte[]{(byte) 0x00, (byte) 0x20}),
    TLS_KRB5_WITH_IDEA_CBC_SHA("TLS_KRB5_WITH_IDEA_CBC_SHA", "0021", new byte[]{(byte) 0x00, (byte) 0x21}),
    TLS_KRB5_WITH_DES_CBC_MD5("TLS_KRB5_WITH_DES_CBC_MD5", "0022", new byte[]{(byte) 0x00, (byte) 0x22}),
    TLS_KRB5_WITH_3DES_EDE_CBC_MD5("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", "0023", new byte[]{(byte) 0x00, (byte) 0x23}),
    TLS_KRB5_WITH_RC4_128_MD5("TLS_KRB5_WITH_RC4_128_MD5", "0024", new byte[]{(byte) 0x00, (byte) 0x24}),
    TLS_KRB5_WITH_IDEA_CBC_MD5("TLS_KRB5_WITH_IDEA_CBC_MD5", "0025", new byte[]{(byte) 0x00, (byte) 0x25}),
    TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", "0026", new byte[]{(byte) 0x00, (byte) 0x26}),
    TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA("TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA", "0027", new byte[]{(byte) 0x00, (byte) 0x27}),
    TLS_KRB5_EXPORT_WITH_RC4_40_SHA("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", "0028", new byte[]{(byte) 0x00, (byte) 0x28}),
    TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", "0029", new byte[]{(byte) 0x00, (byte) 0x29}),
    TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5("TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5", "002A", new byte[]{(byte) 0x00, (byte) 0x2A}),
    TLS_KRB5_EXPORT_WITH_RC4_40_MD5("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", "002B", new byte[]{(byte) 0x00, (byte) 0x2B}),
    TLS_PSK_WITH_NULL_SHA("TLS_PSK_WITH_NULL_SHA", "002C", new byte[]{(byte) 0x00, (byte) 0x2C}),
    TLS_DHE_PSK_WITH_NULL_SHA("TLS_DHE_PSK_WITH_NULL_SHA", "002D", new byte[]{(byte) 0x00, (byte) 0x2D}),
    TLS_RSA_PSK_WITH_NULL_SHA("TLS_RSA_PSK_WITH_NULL_SHA", "002E", new byte[]{(byte) 0x00, (byte) 0x2E}),
    TLS_RSA_WITH_AES_128_CBC_SHA("TLS_RSA_WITH_AES_128_CBC_SHA", "002F", new byte[]{(byte) 0x00, (byte) 0x2F}),
    TLS_DH_DSS_WITH_AES_128_CBC_SHA("TLS_DH_DSS_WITH_AES_128_CBC_SHA", "0030", new byte[]{(byte) 0x00, (byte) 0x30}),
    TLS_DH_RSA_WITH_AES_128_CBC_SHA("TLS_DH_RSA_WITH_AES_128_CBC_SHA", "0031", new byte[]{(byte) 0x00, (byte) 0x31}),
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", "0032", new byte[]{(byte) 0x00, (byte) 0x32}),
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "0033", new byte[]{(byte) 0x00, (byte) 0x33}),
    TLS_DH_ANON_WITH_AES_128_CBC_SHA("TLS_DH_ANON_WITH_AES_128_CBC_SHA", "0034", new byte[]{(byte) 0x00, (byte) 0x34}),
    TLS_RSA_WITH_AES_256_CBC_SHA("TLS_RSA_WITH_AES_256_CBC_SHA", "0035", new byte[]{(byte) 0x00, (byte) 0x35}),
    TLS_DH_DSS_WITH_AES_256_CBC_SHA("TLS_DH_DSS_WITH_AES_256_CBC_SHA", "0036", new byte[]{(byte) 0x00, (byte) 0x36}),
    TLS_DH_RSA_WITH_AES_256_CBC_SHA("TLS_DH_RSA_WITH_AES_256_CBC_SHA", "0037", new byte[]{(byte) 0x00, (byte) 0x37}),
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", "0038", new byte[]{(byte) 0x00, (byte) 0x38}),
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", "0039", new byte[]{(byte) 0x00, (byte) 0x39}),
    TLS_DH_ANON_WITH_AES_256_CBC_SHA("TLS_DH_ANON_WITH_AES_256_CBC_SHA", "003A", new byte[]{(byte) 0x00, (byte) 0x3A}),
    TLS_RSA_WITH_NULL_SHA256("TLS_RSA_WITH_NULL_SHA256", "003B", new byte[]{(byte) 0x00, (byte) 0x3B}),
    TLS_RSA_WITH_AES_128_CBC_SHA256("TLS_RSA_WITH_AES_128_CBC_SHA256", "003C", new byte[]{(byte) 0x00, (byte) 0x3C}),
    TLS_RSA_WITH_AES_256_CBC_SHA256("TLS_RSA_WITH_AES_256_CBC_SHA256", "003D", new byte[]{(byte) 0x00, (byte) 0x3D}),
    TLS_DH_DSS_WITH_AES_128_CBC_SHA256("TLS_DH_DSS_WITH_AES_128_CBC_SHA256", "003E", new byte[]{(byte) 0x00, (byte) 0x3E}),
    TLS_DH_RSA_WITH_AES_128_CBC_SHA256("TLS_DH_RSA_WITH_AES_128_CBC_SHA256", "003F", new byte[]{(byte) 0x00, (byte) 0x3F}),
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", "0040", new byte[]{(byte) 0x00, (byte) 0x40}),
    TLS_RSA_WITH_CAMELLIA_128_CBC_SHA("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", "0041", new byte[]{(byte) 0x00, (byte) 0x41}),
    TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA("TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA", "0042", new byte[]{(byte) 0x00, (byte) 0x42}),
    TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA("TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA", "0043", new byte[]{(byte) 0x00, (byte) 0x43}),
    TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", "0044", new byte[]{(byte) 0x00, (byte) 0x44}),
    TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", "0045", new byte[]{(byte) 0x00, (byte) 0x45}),
    TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA("TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA", "0046", new byte[]{(byte) 0x00, (byte) 0x46}),
    TLS_ECDH_ECDSA_WITH_NULL_SHA("TLS_ECDH_ECDSA_WITH_NULL_SHA", "0047", new byte[]{(byte) 0x00, (byte) 0x47}),
    TLS_ECDH_ECDSA_WITH_RC4_128_SHA("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", "0048", new byte[]{(byte) 0x00, (byte) 0x48}),
    TLS_ECDH_ECDSA_WITH_DES_CBC_SHA("TLS_ECDH_ECDSA_WITH_DES_CBC_SHA", "0049", new byte[]{(byte) 0x00, (byte) 0x49}),
    TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", "004A", new byte[]{(byte) 0x00, (byte) 0x4A}),
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", "004B", new byte[]{(byte) 0x00, (byte) 0x4B}),
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", "004C", new byte[]{(byte) 0x00, (byte) 0x4C}),
    TLS_RSA_EXPORT1024_WITH_RC4_56_MD5("TLS_RSA_EXPORT1024_WITH_RC4_56_MD5", "0060", new byte[]{(byte) 0x00, (byte) 0x60}),
    TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5("TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5", "0061", new byte[]{(byte) 0x00, (byte) 0x61}),
    TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA("TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA", "0062", new byte[]{(byte) 0x00, (byte) 0x62}),
    TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA("TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA", "0063", new byte[]{(byte) 0x00, (byte) 0x63}),
    TLS_RSA_EXPORT1024_WITH_RC4_56_SHA("TLS_RSA_EXPORT1024_WITH_RC4_56_SHA", "0064", new byte[]{(byte) 0x00, (byte) 0x64}),
    TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA("TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA", "0065", new byte[]{(byte) 0x00, (byte) 0x65}),
    TLS_DHE_DSS_WITH_RC4_128_SHA("TLS_DHE_DSS_WITH_RC4_128_SHA", "0066", new byte[]{(byte) 0x00, (byte) 0x66}),
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", "0067", new byte[]{(byte) 0x00, (byte) 0x67}),
    TLS_DH_DSS_WITH_AES_256_CBC_SHA256("TLS_DH_DSS_WITH_AES_256_CBC_SHA256", "0068", new byte[]{(byte) 0x00, (byte) 0x68}),
    TLS_DH_RSA_WITH_AES_256_CBC_SHA256("TLS_DH_RSA_WITH_AES_256_CBC_SHA256", "0069", new byte[]{(byte) 0x00, (byte) 0x69}),
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", "006A", new byte[]{(byte) 0x00, (byte) 0x6A}),
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", "006B", new byte[]{(byte) 0x00, (byte) 0x6B}),
    TLS_DH_ANON_WITH_AES_128_CBC_SHA256("TLS_DH_ANON_WITH_AES_128_CBC_SHA256", "006C", new byte[]{(byte) 0x00, (byte) 0x6C}),
    TLS_DH_ANON_WITH_AES_256_CBC_SHA256("TLS_DH_ANON_WITH_AES_256_CBC_SHA256", "006D", new byte[]{(byte) 0x00, (byte) 0x6D}),
    TLS_GOSTR341094_WITH_28147_CNT_IMIT("TLS_GOSTR341094_WITH_28147_CNT_IMIT", "0080", new byte[]{(byte) 0x00, (byte) 0x80}),
    TLS_GOSTR341001_WITH_28147_CNT_IMIT("TLS_GOSTR341001_WITH_28147_CNT_IMIT", "0081", new byte[]{(byte) 0x00, (byte) 0x81}),
    TLS_GOSTR341094_WITH_NULL_GOSTR3411("TLS_GOSTR341094_WITH_NULL_GOSTR3411", "0082", new byte[]{(byte) 0x00, (byte) 0x82}),
    TLS_GOSTR341001_WITH_NULL_GOSTR3411("TLS_GOSTR341001_WITH_NULL_GOSTR3411", "0083", new byte[]{(byte) 0x00, (byte) 0x83}),
    TLS_RSA_WITH_CAMELLIA_256_CBC_SHA("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", "0084", new byte[]{(byte) 0x00, (byte) 0x84}),
    TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA("TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA", "0085", new byte[]{(byte) 0x00, (byte) 0x85}),
    TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA("TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA", "0086", new byte[]{(byte) 0x00, (byte) 0x86}),
    TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", "0087", new byte[]{(byte) 0x00, (byte) 0x87}),
    TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", "0088", new byte[]{(byte) 0x00, (byte) 0x88}),
    TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA("TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA", "0089", new byte[]{(byte) 0x00, (byte) 0x89}),
    TLS_PSK_WITH_RC4_128_SHA("TLS_PSK_WITH_RC4_128_SHA", "008A", new byte[]{(byte) 0x00, (byte) 0x8A}),
    TLS_PSK_WITH_3DES_EDE_CBC_SHA("TLS_PSK_WITH_3DES_EDE_CBC_SHA", "008B", new byte[]{(byte) 0x00, (byte) 0x8B}),
    TLS_PSK_WITH_AES_128_CBC_SHA("TLS_PSK_WITH_AES_128_CBC_SHA", "008C", new byte[]{(byte) 0x00, (byte) 0x8C}),
    TLS_PSK_WITH_AES_256_CBC_SHA("TLS_PSK_WITH_AES_256_CBC_SHA", "008D", new byte[]{(byte) 0x00, (byte) 0x8D}),
    TLS_DHE_PSK_WITH_RC4_128_SHA("TLS_DHE_PSK_WITH_RC4_128_SHA", "008E", new byte[]{(byte) 0x00, (byte) 0x8E}),
    TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA("TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA", "008F", new byte[]{(byte) 0x00, (byte) 0x8F}),
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA("TLS_DHE_PSK_WITH_AES_128_CBC_SHA", "0090", new byte[]{(byte) 0x00, (byte) 0x90}),
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA("TLS_DHE_PSK_WITH_AES_256_CBC_SHA", "0091", new byte[]{(byte) 0x00, (byte) 0x91}),
    TLS_RSA_PSK_WITH_RC4_128_SHA("TLS_RSA_PSK_WITH_RC4_128_SHA", "0092", new byte[]{(byte) 0x00, (byte) 0x92}),
    TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA("TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA", "0093", new byte[]{(byte) 0x00, (byte) 0x93}),
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA("TLS_RSA_PSK_WITH_AES_128_CBC_SHA", "0094", new byte[]{(byte) 0x00, (byte) 0x94}),
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA("TLS_RSA_PSK_WITH_AES_256_CBC_SHA", "0095", new byte[]{(byte) 0x00, (byte) 0x95}),
    TLS_RSA_WITH_SEED_CBC_SHA("TLS_RSA_WITH_SEED_CBC_SHA", "0096", new byte[]{(byte) 0x00, (byte) 0x96}),
    TLS_DH_DSS_WITH_SEED_CBC_SHA("TLS_DH_DSS_WITH_SEED_CBC_SHA", "0097", new byte[]{(byte) 0x00, (byte) 0x97}),
    TLS_DH_RSA_WITH_SEED_CBC_SHA("TLS_DH_RSA_WITH_SEED_CBC_SHA", "0098", new byte[]{(byte) 0x00, (byte) 0x98}),
    TLS_DHE_DSS_WITH_SEED_CBC_SHA("TLS_DHE_DSS_WITH_SEED_CBC_SHA", "0099", new byte[]{(byte) 0x00, (byte) 0x99}),
    TLS_DHE_RSA_WITH_SEED_CBC_SHA("TLS_DHE_RSA_WITH_SEED_CBC_SHA", "009A", new byte[]{(byte) 0x00, (byte) 0x9A}),
    TLS_DH_ANON_WITH_SEED_CBC_SHA("TLS_DH_ANON_WITH_SEED_CBC_SHA", "009B", new byte[]{(byte) 0x00, (byte) 0x9B}),
    TLS_RSA_WITH_AES_128_GCM_SHA256("TLS_RSA_WITH_AES_128_GCM_SHA256", "009C", new byte[]{(byte) 0x00, (byte) 0x9C}),
    TLS_RSA_WITH_AES_256_GCM_SHA384("TLS_RSA_WITH_AES_256_GCM_SHA384", "009D", new byte[]{(byte) 0x00, (byte) 0x9D}),
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", "009E", new byte[]{(byte) 0x00, (byte) 0x9E}),
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", "009F", new byte[]{(byte) 0x00, (byte) 0x9F}),
    TLS_DH_RSA_WITH_AES_128_GCM_SHA256("TLS_DH_RSA_WITH_AES_128_GCM_SHA256", "00A0", new byte[]{(byte) 0x00, (byte) 0xA0}),
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384("TLS_DH_RSA_WITH_AES_256_GCM_SHA384", "00A1", new byte[]{(byte) 0x00, (byte) 0xA1}),
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", "00A2", new byte[]{(byte) 0x00, (byte) 0xA2}),
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", "00A3", new byte[]{(byte) 0x00, (byte) 0xA3}),
    TLS_DH_DSS_WITH_AES_128_GCM_SHA256("TLS_DH_DSS_WITH_AES_128_GCM_SHA256", "00A4", new byte[]{(byte) 0x00, (byte) 0xA4}),
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384("TLS_DH_DSS_WITH_AES_256_GCM_SHA384", "00A5", new byte[]{(byte) 0x00, (byte) 0xA5}),
    TLS_DH_ANON_WITH_AES_128_GCM_SHA256("TLS_DH_ANON_WITH_AES_128_GCM_SHA256", "00A6", new byte[]{(byte) 0x00, (byte) 0xA6}),
    TLS_DH_ANON_WITH_AES_256_GCM_SHA384("TLS_DH_ANON_WITH_AES_256_GCM_SHA384", "00A7", new byte[]{(byte) 0x00, (byte) 0xA7}),
    TLS_PSK_WITH_AES_128_GCM_SHA256("TLS_PSK_WITH_AES_128_GCM_SHA256", "00A8", new byte[]{(byte) 0x00, (byte) 0xA8}),
    TLS_PSK_WITH_AES_256_GCM_SHA384("TLS_PSK_WITH_AES_256_GCM_SHA384", "00A9", new byte[]{(byte) 0x00, (byte) 0xA9}),
    TLS_DHE_PSK_WITH_AES_128_GCM_SHA256("TLS_DHE_PSK_WITH_AES_128_GCM_SHA256", "00AA", new byte[]{(byte) 0x00, (byte) 0xAA}),
    TLS_DHE_PSK_WITH_AES_256_GCM_SHA384("TLS_DHE_PSK_WITH_AES_256_GCM_SHA384", "00AB", new byte[]{(byte) 0x00, (byte) 0xAB}),
    TLS_RSA_PSK_WITH_AES_128_GCM_SHA256("TLS_RSA_PSK_WITH_AES_128_GCM_SHA256", "00AC", new byte[]{(byte) 0x00, (byte) 0xAC}),
    TLS_RSA_PSK_WITH_AES_256_GCM_SHA384("TLS_RSA_PSK_WITH_AES_256_GCM_SHA384", "00AD", new byte[]{(byte) 0x00, (byte) 0xAD}),
    TLS_PSK_WITH_AES_128_CBC_SHA256("TLS_PSK_WITH_AES_128_CBC_SHA256", "00AE", new byte[]{(byte) 0x00, (byte) 0xAE}),
    TLS_PSK_WITH_AES_256_CBC_SHA384("TLS_PSK_WITH_AES_256_CBC_SHA384", "00AF", new byte[]{(byte) 0x00, (byte) 0xAF}),
    TLS_PSK_WITH_NULL_SHA256("TLS_PSK_WITH_NULL_SHA256", "00B0", new byte[]{(byte) 0x00, (byte) 0xB0}),
    TLS_PSK_WITH_NULL_SHA384("TLS_PSK_WITH_NULL_SHA384", "00B1", new byte[]{(byte) 0x00, (byte) 0xB1}),
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA256("TLS_DHE_PSK_WITH_AES_128_CBC_SHA256", "00B2", new byte[]{(byte) 0x00, (byte) 0xB2}),
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA384("TLS_DHE_PSK_WITH_AES_256_CBC_SHA384", "00B3", new byte[]{(byte) 0x00, (byte) 0xB3}),
    TLS_DHE_PSK_WITH_NULL_SHA256("TLS_DHE_PSK_WITH_NULL_SHA256", "00B4", new byte[]{(byte) 0x00, (byte) 0xB4}),
    TLS_DHE_PSK_WITH_NULL_SHA384("TLS_DHE_PSK_WITH_NULL_SHA384", "00B5", new byte[]{(byte) 0x00, (byte) 0xB5}),
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA256("TLS_RSA_PSK_WITH_AES_128_CBC_SHA256", "00B6", new byte[]{(byte) 0x00, (byte) 0xB6}),
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA384("TLS_RSA_PSK_WITH_AES_256_CBC_SHA384", "00B7", new byte[]{(byte) 0x00, (byte) 0xB7}),
    TLS_RSA_PSK_WITH_NULL_SHA256("TLS_RSA_PSK_WITH_NULL_SHA256", "00B8", new byte[]{(byte) 0x00, (byte) 0xB8}),
    TLS_RSA_PSK_WITH_NULL_SHA384("TLS_RSA_PSK_WITH_NULL_SHA384", "00B9", new byte[]{(byte) 0x00, (byte) 0xB9}),
    TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256", "00BA", new byte[]{(byte) 0x00, (byte) 0xBA}),
    TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256("TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256", "00BB", new byte[]{(byte) 0x00, (byte) 0xBB}),
    TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256", "00BC", new byte[]{(byte) 0x00, (byte) 0xBC}),
    TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256", "00BD", new byte[]{(byte) 0x00, (byte) 0xBD}),
    TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256", "00BE", new byte[]{(byte) 0x00, (byte) 0xBE}),
    TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256("TLS_DH_ANON_WITH_CAMELLIA_128_CBC_SHA256", "00BF", new byte[]{(byte) 0x00, (byte) 0xBF}),
    TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256", "00C0", new byte[]{(byte) 0x00, (byte) 0xC0}),
    TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256("TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256", "00C1", new byte[]{(byte) 0x00, (byte) 0xC1}),
    TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256("TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256", "00C2", new byte[]{(byte) 0x00, (byte) 0xC2}),
    TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256", "00C3", new byte[]{(byte) 0x00, (byte) 0xC3}),
    TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256", "00C4", new byte[]{(byte) 0x00, (byte) 0xC4}),
    TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256("TLS_DH_ANON_WITH_CAMELLIA_256_CBC_SHA256", "00C5", new byte[]{(byte) 0x00, (byte) 0xC5}),
    TLS_RENEGO_PROTECTION_REQUEST("TLS_RENEGO_PROTECTION_REQUEST", "00FF", new byte[]{(byte) 0x00, (byte) 0xFF}),
    TLS_FALLBACK_SCSV("TLS_FALLBACK_SCSV", "5600", new byte[]{(byte) 0x56, (byte) 0x00}),
    TLS_ECDHE_ECDSA_WITH_NULL_SHA("TLS_ECDHE_ECDSA_WITH_NULL_SHA", "C006", new byte[]{(byte) 0xC0, (byte) 0x06}),
    TLS_ECDHE_ECDSA_WITH_RC4_128_SHA("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", "C007", new byte[]{(byte) 0xC0, (byte) 0x07}),
    TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", "C008", new byte[]{(byte) 0xC0, (byte) 0x08}),
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", "C009", new byte[]{(byte) 0xC0, (byte) 0x09}),
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", "C00A", new byte[]{(byte) 0xC0, (byte) 0x0A}),
    TLS_ECDH_RSA_WITH_NULL_SHA("TLS_ECDH_RSA_WITH_NULL_SHA", "C00B", new byte[]{(byte) 0xC0, (byte) 0x0B}),
    TLS_ECDH_RSA_WITH_RC4_128_SHA("TLS_ECDH_RSA_WITH_RC4_128_SHA", "C00C", new byte[]{(byte) 0xC0, (byte) 0x0C}),
    TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", "C00D", new byte[]{(byte) 0xC0, (byte) 0x0D}),
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", "C00E", new byte[]{(byte) 0xC0, (byte) 0x0E}),
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", "C00F", new byte[]{(byte) 0xC0, (byte) 0x0F}),
    TLS_ECDHE_RSA_WITH_NULL_SHA("TLS_ECDHE_RSA_WITH_NULL_SHA", "C010", new byte[]{(byte) 0xC0, (byte) 0x10}),
    TLS_ECDHE_RSA_WITH_RC4_128_SHA("TLS_ECDHE_RSA_WITH_RC4_128_SHA", "C011", new byte[]{(byte) 0xC0, (byte) 0x11}),
    TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", "C012", new byte[]{(byte) 0xC0, (byte) 0x12}),
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", "C013", new byte[]{(byte) 0xC0, (byte) 0x13}),
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", "C014", new byte[]{(byte) 0xC0, (byte) 0x14}),
    TLS_ECDH_ANON_WITH_NULL_SHA("TLS_ECDH_ANON_WITH_NULL_SHA", "C015", new byte[]{(byte) 0xC0, (byte) 0x15}),
    TLS_ECDH_ANON_WITH_RC4_128_SHA("TLS_ECDH_ANON_WITH_RC4_128_SHA", "C016", new byte[]{(byte) 0xC0, (byte) 0x16}),
    TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA("TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA", "C017", new byte[]{(byte) 0xC0, (byte) 0x17}),
    TLS_ECDH_ANON_WITH_AES_128_CBC_SHA("TLS_ECDH_ANON_WITH_AES_128_CBC_SHA", "C018", new byte[]{(byte) 0xC0, (byte) 0x18}),
    TLS_ECDH_ANON_WITH_AES_256_CBC_SHA("TLS_ECDH_ANON_WITH_AES_256_CBC_SHA", "C019", new byte[]{(byte) 0xC0, (byte) 0x19}),
    TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA("TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA", "C01A", new byte[]{(byte) 0xC0, (byte) 0x1A}),
    TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA("TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA", "C01B", new byte[]{(byte) 0xC0, (byte) 0x1B}),
    TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA("TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA", "C01C", new byte[]{(byte) 0xC0, (byte) 0x1C}),
    TLS_SRP_SHA_WITH_AES_128_CBC_SHA("TLS_SRP_SHA_WITH_AES_128_CBC_SHA", "C01D", new byte[]{(byte) 0xC0, (byte) 0x1D}),
    TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA("TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA", "C01E", new byte[]{(byte) 0xC0, (byte) 0x1E}),
    TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA("TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA", "C01F", new byte[]{(byte) 0xC0, (byte) 0x1F}),
    TLS_SRP_SHA_WITH_AES_256_CBC_SHA("TLS_SRP_SHA_WITH_AES_256_CBC_SHA", "C020", new byte[]{(byte) 0xC0, (byte) 0x20}),
    TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA("TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA", "C021", new byte[]{(byte) 0xC0, (byte) 0x21}),
    TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA("TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA", "C022", new byte[]{(byte) 0xC0, (byte) 0x22}),
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", "C023", new byte[]{(byte) 0xC0, (byte) 0x23}),
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", "C024", new byte[]{(byte) 0xC0, (byte) 0x24}),
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", "C025", new byte[]{(byte) 0xC0, (byte) 0x25}),
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", "C026", new byte[]{(byte) 0xC0, (byte) 0x26}),
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", "C027", new byte[]{(byte) 0xC0, (byte) 0x27}),
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", "C028", new byte[]{(byte) 0xC0, (byte) 0x28}),
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", "C029", new byte[]{(byte) 0xC0, (byte) 0x29}),
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", "C02A", new byte[]{(byte) 0xC0, (byte) 0x2A}),
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "C02B", new byte[]{(byte) 0xC0, (byte) 0x2B}),
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "C02C", new byte[]{(byte) 0xC0, (byte) 0x2C}),
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", "C02D", new byte[]{(byte) 0xC0, (byte) 0x2D}),
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", "C02E", new byte[]{(byte) 0xC0, (byte) 0x2E}),
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", "C02F", new byte[]{(byte) 0xC0, (byte) 0x2F}),
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "C030", new byte[]{(byte) 0xC0, (byte) 0x30}),
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", "C031", new byte[]{(byte) 0xC0, (byte) 0x31}),
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", "C032", new byte[]{(byte) 0xC0, (byte) 0x32}),
    TLS_ECDHE_PSK_WITH_RC4_128_SHA("TLS_ECDHE_PSK_WITH_RC4_128_SHA", "C033", new byte[]{(byte) 0xC0, (byte) 0x33}),
    TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA("TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA", "C034", new byte[]{(byte) 0xC0, (byte) 0x34}),
    TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", "C035", new byte[]{(byte) 0xC0, (byte) 0x35}),
    TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", "C036", new byte[]{(byte) 0xC0, (byte) 0x36}),
    TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256", "C037", new byte[]{(byte) 0xC0, (byte) 0x37}),
    TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384", "C038", new byte[]{(byte) 0xC0, (byte) 0x38}),
    TLS_ECDHE_PSK_WITH_NULL_SHA("TLS_ECDHE_PSK_WITH_NULL_SHA", "C039", new byte[]{(byte) 0xC0, (byte) 0x39}),
    TLS_ECDHE_PSK_WITH_NULL_SHA256("TLS_ECDHE_PSK_WITH_NULL_SHA256", "C03A", new byte[]{(byte) 0xC0, (byte) 0x3A}),
    TLS_ECDHE_PSK_WITH_NULL_SHA384("TLS_ECDHE_PSK_WITH_NULL_SHA384", "C03B", new byte[]{(byte) 0xC0, (byte) 0x3B}),
    TLS_RSA_WITH_ARIA_128_CBC_SHA256("TLS_RSA_WITH_ARIA_128_CBC_SHA256", "C03C", new byte[]{(byte) 0xC0, (byte) 0x3C}),
    TLS_RSA_WITH_ARIA_256_CBC_SHA384("TLS_RSA_WITH_ARIA_256_CBC_SHA384", "C03D", new byte[]{(byte) 0xC0, (byte) 0x3D}),
    TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256("TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256", "C03E", new byte[]{(byte) 0xC0, (byte) 0x3E}),
    TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384("TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384", "C03F", new byte[]{(byte) 0xC0, (byte) 0x3F}),
    TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256("TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256", "C040", new byte[]{(byte) 0xC0, (byte) 0x40}),
    TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384("TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384", "C041", new byte[]{(byte) 0xC0, (byte) 0x41}),
    TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256("TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256", "C042", new byte[]{(byte) 0xC0, (byte) 0x42}),
    TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384("TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384", "C043", new byte[]{(byte) 0xC0, (byte) 0x43}),
    TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256("TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256", "C044", new byte[]{(byte) 0xC0, (byte) 0x44}),
    TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384("TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384", "C045", new byte[]{(byte) 0xC0, (byte) 0x45}),
    TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256("TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256", "C046", new byte[]{(byte) 0xC0, (byte) 0x46}),
    TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384("TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384", "C047", new byte[]{(byte) 0xC0, (byte) 0x47}),
    TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256("TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256", "C048", new byte[]{(byte) 0xC0, (byte) 0x48}),
    TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384("TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384", "C049", new byte[]{(byte) 0xC0, (byte) 0x49}),
    TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256("TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256", "C04A", new byte[]{(byte) 0xC0, (byte) 0x4A}),
    TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384("TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384", "C04B", new byte[]{(byte) 0xC0, (byte) 0x4B}),
    TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256("TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256", "C04C", new byte[]{(byte) 0xC0, (byte) 0x4C}),
    TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384("TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384", "C04D", new byte[]{(byte) 0xC0, (byte) 0x4D}),
    TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256("TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256", "C04E", new byte[]{(byte) 0xC0, (byte) 0x4E}),
    TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384("TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384", "C04F", new byte[]{(byte) 0xC0, (byte) 0x4F}),
    TLS_RSA_WITH_ARIA_128_GCM_SHA256("TLS_RSA_WITH_ARIA_128_GCM_SHA256", "C050", new byte[]{(byte) 0xC0, (byte) 0x50}),
    TLS_RSA_WITH_ARIA_256_GCM_SHA384("TLS_RSA_WITH_ARIA_256_GCM_SHA384", "C051", new byte[]{(byte) 0xC0, (byte) 0x51}),
    TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256("TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256", "C052", new byte[]{(byte) 0xC0, (byte) 0x52}),
    TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384("TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384", "C053", new byte[]{(byte) 0xC0, (byte) 0x53}),
    TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256("TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256", "C054", new byte[]{(byte) 0xC0, (byte) 0x54}),
    TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384("TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384", "C055", new byte[]{(byte) 0xC0, (byte) 0x55}),
    TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256("TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256", "C056", new byte[]{(byte) 0xC0, (byte) 0x56}),
    TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384("TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384", "C057", new byte[]{(byte) 0xC0, (byte) 0x57}),
    TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256("TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256", "C058", new byte[]{(byte) 0xC0, (byte) 0x58}),
    TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384("TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384", "C059", new byte[]{(byte) 0xC0, (byte) 0x59}),
    TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256("TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256", "C05A", new byte[]{(byte) 0xC0, (byte) 0x5A}),
    TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384("TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384", "C05B", new byte[]{(byte) 0xC0, (byte) 0x5B}),
    TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256("TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256", "C05C", new byte[]{(byte) 0xC0, (byte) 0x5C}),
    TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384("TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384", "C05D", new byte[]{(byte) 0xC0, (byte) 0x5D}),
    TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256("TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256", "C05E", new byte[]{(byte) 0xC0, (byte) 0x5E}),
    TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384("TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384", "C05F", new byte[]{(byte) 0xC0, (byte) 0x5F}),
    TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256("TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256", "C060", new byte[]{(byte) 0xC0, (byte) 0x60}),
    TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384("TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384", "C061", new byte[]{(byte) 0xC0, (byte) 0x61}),
    TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256("TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256", "C062", new byte[]{(byte) 0xC0, (byte) 0x62}),
    TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384("TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384", "C063", new byte[]{(byte) 0xC0, (byte) 0x63}),
    TLS_PSK_WITH_ARIA_128_CBC_SHA256("TLS_PSK_WITH_ARIA_128_CBC_SHA256", "C064", new byte[]{(byte) 0xC0, (byte) 0x64}),
    TLS_PSK_WITH_ARIA_256_CBC_SHA384("TLS_PSK_WITH_ARIA_256_CBC_SHA384", "C065", new byte[]{(byte) 0xC0, (byte) 0x65}),
    TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256("TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256", "C066", new byte[]{(byte) 0xC0, (byte) 0x66}),
    TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384("TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384", "C067", new byte[]{(byte) 0xC0, (byte) 0x67}),
    TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256("TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256", "C068", new byte[]{(byte) 0xC0, (byte) 0x68}),
    TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384("TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384", "C069", new byte[]{(byte) 0xC0, (byte) 0x69}),
    TLS_PSK_WITH_ARIA_128_GCM_SHA256("TLS_PSK_WITH_ARIA_128_GCM_SHA256", "C06A", new byte[]{(byte) 0xC0, (byte) 0x6A}),
    TLS_PSK_WITH_ARIA_256_GCM_SHA384("TLS_PSK_WITH_ARIA_256_GCM_SHA384", "C06B", new byte[]{(byte) 0xC0, (byte) 0x6B}),
    TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256("TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256", "C06C", new byte[]{(byte) 0xC0, (byte) 0x6C}),
    TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384("TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384", "C06D", new byte[]{(byte) 0xC0, (byte) 0x6D}),
    TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256("TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256", "C06E", new byte[]{(byte) 0xC0, (byte) 0x6E}),
    TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384("TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384", "C06F", new byte[]{(byte) 0xC0, (byte) 0x6F}),
    TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256("TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256", "C070", new byte[]{(byte) 0xC0, (byte) 0x70}),
    TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384("TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384", "C071", new byte[]{(byte) 0xC0, (byte) 0x71}),
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256", "C072", new byte[]{(byte) 0xC0, (byte) 0x72}),
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384("TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384", "C073", new byte[]{(byte) 0xC0, (byte) 0x73}),
    TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256", "C074", new byte[]{(byte) 0xC0, (byte) 0x74}),
    TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384("TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384", "C075", new byte[]{(byte) 0xC0, (byte) 0x75}),
    TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256", "C076", new byte[]{(byte) 0xC0, (byte) 0x76}),
    TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384("TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384", "C077", new byte[]{(byte) 0xC0, (byte) 0x77}),
    TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256("TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256", "C078", new byte[]{(byte) 0xC0, (byte) 0x78}),
    TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384("TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384", "C079", new byte[]{(byte) 0xC0, (byte) 0x79}),
    TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256", "C07A", new byte[]{(byte) 0xC0, (byte) 0x7A}),
    TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384", "C07B", new byte[]{(byte) 0xC0, (byte) 0x7B}),
    TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256", "C07C", new byte[]{(byte) 0xC0, (byte) 0x7C}),
    TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384", "C07D", new byte[]{(byte) 0xC0, (byte) 0x7D}),
    TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256", "C07E", new byte[]{(byte) 0xC0, (byte) 0x7E}),
    TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384", "C07F", new byte[]{(byte) 0xC0, (byte) 0x7F}),
    TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256("TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256", "C080", new byte[]{(byte) 0xC0, (byte) 0x80}),
    TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384("TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384", "C081", new byte[]{(byte) 0xC0, (byte) 0x81}),
    TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256("TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256", "C082", new byte[]{(byte) 0xC0, (byte) 0x82}),
    TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384("TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384", "C083", new byte[]{(byte) 0xC0, (byte) 0x83}),
    TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256("TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256", "C084", new byte[]{(byte) 0xC0, (byte) 0x84}),
    TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384("TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384", "C085", new byte[]{(byte) 0xC0, (byte) 0x85}),
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256", "C086", new byte[]{(byte) 0xC0, (byte) 0x86}),
    TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384", "C087", new byte[]{(byte) 0xC0, (byte) 0x87}),
    TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256", "C088", new byte[]{(byte) 0xC0, (byte) 0x88}),
    TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384", "C089", new byte[]{(byte) 0xC0, (byte) 0x89}),
    TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256", "C08A", new byte[]{(byte) 0xC0, (byte) 0x8A}),
    TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384", "C08B", new byte[]{(byte) 0xC0, (byte) 0x8B}),
    TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256("TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256", "C08C", new byte[]{(byte) 0xC0, (byte) 0x8C}),
    TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384("TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384", "C08D", new byte[]{(byte) 0xC0, (byte) 0x8D}),
    TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256("TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256", "C08E", new byte[]{(byte) 0xC0, (byte) 0x8E}),
    TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384("TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384", "C08F", new byte[]{(byte) 0xC0, (byte) 0x8F}),
    TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256("TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256", "C090", new byte[]{(byte) 0xC0, (byte) 0x90}),
    TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384("TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384", "C091", new byte[]{(byte) 0xC0, (byte) 0x91}),
    TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256("TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256", "C092", new byte[]{(byte) 0xC0, (byte) 0x92}),
    TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384("TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384", "C093", new byte[]{(byte) 0xC0, (byte) 0x93}),
    TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256("TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256", "C094", new byte[]{(byte) 0xC0, (byte) 0x94}),
    TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384("TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384", "C095", new byte[]{(byte) 0xC0, (byte) 0x95}),
    TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256("TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256", "C096", new byte[]{(byte) 0xC0, (byte) 0x96}),
    TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384("TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384", "C097", new byte[]{(byte) 0xC0, (byte) 0x97}),
    TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256("TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256", "C098", new byte[]{(byte) 0xC0, (byte) 0x98}),
    TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384("TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384", "C099", new byte[]{(byte) 0xC0, (byte) 0x99}),
    TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256("TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256", "C09A", new byte[]{(byte) 0xC0, (byte) 0x9A}),
    TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384("TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384", "C09B", new byte[]{(byte) 0xC0, (byte) 0x9B}),
    TLS_RSA_WITH_AES_128_CCM("TLS_RSA_WITH_AES_128_CCM", "C09C", new byte[]{(byte) 0xC0, (byte) 0x9C}),
    TLS_RSA_WITH_AES_256_CCM("TLS_RSA_WITH_AES_256_CCM", "C09D", new byte[]{(byte) 0xC0, (byte) 0x9D}),
    TLS_DHE_RSA_WITH_AES_128_CCM("TLS_DHE_RSA_WITH_AES_128_CCM", "C09E", new byte[]{(byte) 0xC0, (byte) 0x9E}),
    TLS_DHE_RSA_WITH_AES_256_CCM("TLS_DHE_RSA_WITH_AES_256_CCM", "C09F", new byte[]{(byte) 0xC0, (byte) 0x9F}),
    TLS_RSA_WITH_AES_128_CCM_8("TLS_RSA_WITH_AES_128_CCM_8", "C0A0", new byte[]{(byte) 0xC0, (byte) 0xA0}),
    TLS_RSA_WITH_AES_256_CCM_8("TLS_RSA_WITH_AES_256_CCM_8", "C0A1", new byte[]{(byte) 0xC0, (byte) 0xA1}),
    TLS_DHE_RSA_WITH_AES_128_CCM_8("TLS_DHE_RSA_WITH_AES_128_CCM_8", "C0A2", new byte[]{(byte) 0xC0, (byte) 0xA2}),
    TLS_DHE_RSA_WITH_AES_256_CCM_8("TLS_DHE_RSA_WITH_AES_256_CCM_8", "C0A3", new byte[]{(byte) 0xC0, (byte) 0xA3}),
    TLS_PSK_WITH_AES_128_CCM("TLS_PSK_WITH_AES_128_CCM", "C0A4", new byte[]{(byte) 0xC0, (byte) 0xA4}),
    TLS_PSK_WITH_AES_256_CCM("TLS_PSK_WITH_AES_256_CCM", "C0A5", new byte[]{(byte) 0xC0, (byte) 0xA5}),
    TLS_DHE_PSK_WITH_AES_128_CCM("TLS_DHE_PSK_WITH_AES_128_CCM", "C0A6", new byte[]{(byte) 0xC0, (byte) 0xA6}),
    TLS_DHE_PSK_WITH_AES_256_CCM("TLS_DHE_PSK_WITH_AES_256_CCM", "C0A7", new byte[]{(byte) 0xC0, (byte) 0xA7}),
    TLS_PSK_WITH_AES_128_CCM_8("TLS_PSK_WITH_AES_128_CCM_8", "C0A8", new byte[]{(byte) 0xC0, (byte) 0xA8}),
    TLS_PSK_WITH_AES_256_CCM_8("TLS_PSK_WITH_AES_256_CCM_8", "C0A9", new byte[]{(byte) 0xC0, (byte) 0xA9}),
    TLS_PSK_DHE_WITH_AES_128_CCM_8("TLS_PSK_DHE_WITH_AES_128_CCM_8", "C0AA", new byte[]{(byte) 0xC0, (byte) 0xAA}),
    TLS_PSK_DHE_WITH_AES_256_CCM_8("TLS_PSK_DHE_WITH_AES_256_CCM_8", "C0AB", new byte[]{(byte) 0xC0, (byte) 0xAB}),
    TLS_ECDHE_ECDSA_WITH_AES_128_CCM("TLS_ECDHE_ECDSA_WITH_AES_128_CCM", "C0AC", new byte[]{(byte) 0xC0, (byte) 0xAC}),
    TLS_ECDHE_ECDSA_WITH_AES_256_CCM("TLS_ECDHE_ECDSA_WITH_AES_256_CCM", "C0AD", new byte[]{(byte) 0xC0, (byte) 0xAD}),
    TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8("TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8", "C0AE", new byte[]{(byte) 0xC0, (byte) 0xAE}),
    TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8("TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8", "C0AF", new byte[]{(byte) 0xC0, (byte) 0xAF}),
    TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256("TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256", "CAFE", new byte[]{(byte) 0xCA, (byte) 0xFE}),
    TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256("TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", "CC13", new byte[]{(byte) 0xCC, (byte) 0x13}),
    TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256("TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", "CC14", new byte[]{(byte) 0xCC, (byte) 0x14}),
    TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256("TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256", "CC15", new byte[]{(byte) 0xCC, (byte) 0x15}),
    SSL_RSA_FIPS_WITH_DES_CBC_SHA("SSL_RSA_FIPS_WITH_DES_CBC_SHA", "FEFE", new byte[]{(byte) 0xFE, (byte) 0xFE}),
    SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA("SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA", "FEFF", new byte[]{(byte) 0xFE, (byte) 0xFF}),
    SSL_RSA_WITH_RC2_CBC_MD5("SSL_RSA_WITH_RC2_CBC_MD5", "FF80", new byte[]{(byte) 0xFF, (byte) 0x80}),
    SSL_RSA_WITH_IDEA_CBC_MD5("SSL_RSA_WITH_IDEA_CBC_MD5", "FF81", new byte[]{(byte) 0xFF, (byte) 0x81}),
    SSL_RSA_WITH_DES_CBC_MD5("SSL_RSA_WITH_DES_CBC_MD5", "FF82", new byte[]{(byte) 0xFF, (byte) 0x82}),
    SSL_RSA_WITH_3DES_EDE_CBC_MD5("SSL_RSA_WITH_3DES_EDE_CBC_MD5", "FF83", new byte[]{(byte) 0xFF, (byte) 0x83}),
    SSL_EN_RC2_128_CBC_WITH_MD5("SSL_EN_RC2_128_CBC_WITH_MD5", "FF03", new byte[]{(byte) 0xFF, (byte) 0x03}),
    OP_PCL_TLS10_AES_128_CBC_SHA512("OP_PCL_TLS10_AES_128_CBC_SHA512", "FF85", new byte[]{(byte) 0xFF, (byte) 0x85});


    private String name;
    private String stringValue;
    private byte[] byteValue;

    CipherSuites(String name, String stringValue, byte[] byteValue) {
        this.name = name;
        this.stringValue = stringValue;
        this.byteValue = byteValue;
    }

    public String getName() {
        return name;
    }

    public String getStringValue() {
        return stringValue;
    }

    public byte[] getByteValue() {
        return byteValue;
    }

    public static String getNameByByte(byte[] cipher) {
        for (CipherSuites e : CipherSuites.values()) {
            if (Arrays.equals(cipher, e.getByteValue())) {
                return e.getName();
            }
        }
        return null;
    }

}
